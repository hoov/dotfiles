#!/bin/bash

if [ ! -f "${HOME}/.gitconfig.local" ]; then
  # Okay, this doesn't really work with rcm at the moment, but we'll leave it be
  # read -p "Name [Tom Hoover]: " USERNAME
  # read -p "Email [my gmail]: " EMAIL

  USERNAME=${USERNAME:-Tom Hoover}
  # Silly encoding so my email isn't scraped as easily
  DEFAULT=$(echo Z3ViYmlyZUB0em52eS5wYnoK | base64 --decode | tr 'A-Za-z' 'N-ZA-Mn-za-m')
  EMAIL=${EMAIL:-$DEFAULT}
  EDITOR=${EDITOR:-vim}
  EMAIL=${EMAIL} USERNAME=${USERNAME} envsubst < ../gitconfig.local.template > "${HOME}/.gitconfig.local"
fi

if [ ! -d "${HOME}/.config/nvim/pack/minpac/opt/minpac" ]; then
  git clone -q https://github.com/k-takata/minpac.git "${HOME}/.config/nvim/pack/minpac/opt/minpac"
fi

nvim -u "${HOME}/.config/nvim/plugins.vim" --headless "+packadd minpac" "+call minpac#update('', {'do': 'quitall'})" > /dev/null

# Silence output since I don't care if we don't re-write the standard tags. I could specify the minpac directory
# directly, but I might switch package managers in the future.
nvim -u NONE --headless "+helptags ALL" "+quit" 2> /dev/null

export PYTHONWARNINGS="ignore:DEPRECATION"
# Install python2 stuff first, and then clobber binaries with python3
pip2 install --user -q --upgrade --no-warn-script-location --requirement=../default-python-packages
pip3 install --user -q --upgrade --no-warn-script-location --requirement=../default-python-packages

# Set up asdf
# shellcheck disable=SC1090
source "$HOME/.asdf/asdf.sh"
asdf plugin-add python 2> /dev/null
asdf plugin-add nodejs 2> /dev/null
bash ~/.asdf/plugins/nodejs/bin/import-release-team-keyring 2> /dev/null

asdf install > /dev/null 2>&1

# Rust setup
rustup toolchain add nightly
cargo +nightly install --force racer rustfmt rustfmt-nightly 2> /dev/null
rustup component add rustfmt rust-src --toolchain
rustup component add rustfmt rust-src --toolchain nightly

# More modern terminfo stuff
tic -x ../terminfo.src
